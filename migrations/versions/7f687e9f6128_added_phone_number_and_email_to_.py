"""Added phone_number and email to Technician table

Revision ID: 7f687e9f6128
Revises: bbef6053608d
Create Date: 2025-07-14 08:29:02.595518

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7f687e9f6128'
down_revision = 'bbef6053608d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('equipments')
    op.drop_table('job_precedence')
    op.drop_table('optimization_results')
    with op.batch_alter_table('technicians', schema=None) as batch_op:
        batch_op.add_column(sa.Column('phone_number', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('email', sa.String(length=100), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('technicians', schema=None) as batch_op:
        batch_op.drop_column('email')
        batch_op.drop_column('phone_number')

    op.create_table('optimization_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('algorithm', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('schedule_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('makespan', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('optimization_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('optimization_results_pkey'))
    )
    op.create_table('job_precedence',
    sa.Column('job_id', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('precedes_job_id', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.job_id'], name=op.f('job_precedence_job_id_fkey')),
    sa.ForeignKeyConstraint(['precedes_job_id'], ['jobs.job_id'], name=op.f('job_precedence_precedes_job_id_fkey')),
    sa.PrimaryKeyConstraint('job_id', 'precedes_job_id', name=op.f('job_precedence_pkey'))
    )
    op.create_table('equipments',
    sa.Column('equipment_id', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('equipment_id', name=op.f('equipments_pkey'))
    )
    # ### end Alembic commands ###
